[{"path":"https://jakubsob.github.io/muttest/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 muttest authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jakubsob.github.io/muttest/articles/how-it-works.html","id":"generate-mutants","dir":"Articles","previous_headings":"","what":"Generate mutants","title":"How it works","text":"Project files read stored character vectors test_plan. mutators provided test_plan applied original code generate mutants. one mutator + ‚Üí - code + b + c, generated mutants - b + c + b - c. Even one mutator one line code, many mutants can generated. one change like applied code time, one file time.","code":""},{"path":"https://jakubsob.github.io/muttest/articles/how-it-works.html","id":"copy-the-project-and-apply-the-mutation","dir":"Articles","previous_headings":"","what":"Copy the project and apply the mutation","title":"How it works","text":"copy project temporary directory using ?CopyStrategy. generated mutation, create fresh copy project, one copy created time. overwrite mutated file project copy. üí° needed since R compiled language code can sourced runtime. mutated code evaluated lines read mutated step 1 (memory), miss mutations, test files source original code. Even mutated code R/calculate.R, running test original code sourced test pass. ‚Äôs even apparent projects use modules like box, always source tested code fly.","code":"#' testst/testthat/test_calculate.R source(\"R/calculate.R\") test_that(\"calculate\", {   expect_equal(calculate(1, 2), 3) }) #' testst/testthat/test_calculate.R box::use(R/calculate) test_that(\"calculate\", {  expect_equal(calculate$calculate(1, 2), 3) })"},{"path":"https://jakubsob.github.io/muttest/articles/how-it-works.html","id":"run-tests-and-calculate-the-mutation-score","dir":"Articles","previous_headings":"","what":"Run tests and calculate the mutation score","title":"How it works","text":"run tests copied project mutated code. results counted, test failures total number test runs contribute mutation score. mutants inevitably lead runtime errors, counted failures included mutation score. mutation score percentage mutants detected tests.","code":""},{"path":"https://jakubsob.github.io/muttest/articles/how-it-works.html","id":"clean-up","dir":"Articles","previous_headings":"","what":"Clean up","title":"How it works","text":"clean temporary directory remove files created mutation testing process.","code":""},{"path":"https://jakubsob.github.io/muttest/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jakub Sobolewski. Author, maintainer.","code":""},{"path":"https://jakubsob.github.io/muttest/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sobolewski J (2025). muttest: Mutation Testing. R package version 0.1.0, https://jakubsob.github.io/muttest/.","code":"@Manual{,   title = {muttest: Mutation Testing},   author = {Jakub Sobolewski},   year = {2025},   note = {R package version 0.1.0},   url = {https://jakubsob.github.io/muttest/}, }"},{"path":"https://jakubsob.github.io/muttest/index.html","id":"muttest-","dir":"","previous_headings":"","what":"Mutation Testing","title":"Mutation Testing","text":"Measure quality tests {muttest}. covr tells much code executed tests, tells nothing quality tests. fact, can tests zero assertions still get 100% coverage. can give false sense security. Mutation testing addresses gap. works like : Define set code changes (mutations). Run test suite mutated versions source code. Measure often mutations caught (.e., cause test failures). reveals whether tests asserting right things: 0% score ‚Üí tests pass matter changes. assertions weak. 100% score ‚Üí Every mutation triggers test failure. tests robust. {muttest} gives score, also tells tests files require improved assertions.","code":""},{"path":"https://jakubsob.github.io/muttest/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Mutation Testing","text":"Given codebase : tests : running muttest::test() ‚Äôll get report mutation score: mutation score : Mutation Score=Killed MutantsTotal Mutants√ó100%\\text{Mutation Score} = \\frac{\\text{Killed Mutants}}{\\text{Total Mutants}} \\times 100\\%, Mutant defined variant original code used test robustness test suite. example 2 mutants code: Tests run variants code. first test run first mutant pass, result still 0. second test run second mutant fail, result Inf. second test pass mutants, result still numeric. killed 1 mutant 2, mutation score 50%.","code":"#' R/calculate.R calculate <- function(x, y) {   (x + y) * 0 } #' tests/testthat/test_calculate.R test_that(\"calculate returns a numeric\", {   expect_true(is.numeric(calculate(2, 2))) # ‚ùå This assertion doesn't kill mutants })  test_that(\"calculate always returns 0\", {   expect_equal(calculate(2, 2), 0) # ‚úÖ This assertion only kills \"*\" -> \"/\" mutant }) plan <- muttest::test_plan(   source_files = \"R/calculate.R\",   mutators = list(     muttest::operator(\"+\", \"-\"),     muttest::operator(\"*\", \"/\")   ) )  muttest::test(\"tests/testthat\", plan) #> ‚Ñπ Mutation Testing #>   |   K |   S |   E |   T |   % | Mutator  | File #> x |   0 |   1 |   0 |   1 |   0 | + ‚Üí -    | calculate.R #> ‚úî |   1 |   1 |   0 |   2 |  50 | * ‚Üí /    | calculate.R #> ‚îÄ‚îÄ Mutation Testing Results ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> [ KILLED 1 | SURVIVED 1 | ERRORS 0 | TOTAL 2 | SCORE 50.0% ] #' R/calculate.R calculate <- function(x, y) {   (x - y) * 0 # mutant 1: \"+\" -> \"-\" } #' R/calculate.R calculate <- function(x, y) {   (x + y) / 0 # mutant 2: \"*\" -> \"/\" } #' tests/testthat/test_calculate.R test_that(\"calculate always returns 0\", {   # üü¢ This test doesn't kill \"+\" -> \"-\" operator mutant: (2 - 2) * 0 = 0   # ‚ùå This test kills \"*\" -> \"/\" operator mutant: (2 + 2) / 0 = Inf   expect_equal(calculate(2, 2), 0) })  test_that(\"calculate returns a numeric\", {   # üü¢ This test doesn't kill \"+\" -> \"-\", (2 - 2) * 0 = 0, is numeric   # üü¢ This test doesn't kill \"*\" -> \"/\", (2 + 2) / 0 = Inf, is numeric   expect_true(is.numeric(calculate(2, 2))) })"},{"path":"https://jakubsob.github.io/muttest/reference/CopyStrategy.html","id":null,"dir":"Reference","previous_headings":"","what":"CopyStrategy interface ‚Äî CopyStrategy","title":"CopyStrategy interface ‚Äî CopyStrategy","text":"Extend class implement custom copy strategy.","code":""},{"path":[]},{"path":[]},{"path":"https://jakubsob.github.io/muttest/reference/CopyStrategy.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"CopyStrategy interface ‚Äî CopyStrategy","text":"CopyStrategy$execute() CopyStrategy$clone()","code":""},{"path":"https://jakubsob.github.io/muttest/reference/CopyStrategy.html","id":"method-execute-","dir":"Reference","previous_headings":"","what":"Method execute()","title":"CopyStrategy interface ‚Äî CopyStrategy","text":"Copy project files according strategy","code":""},{"path":"https://jakubsob.github.io/muttest/reference/CopyStrategy.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CopyStrategy interface ‚Äî CopyStrategy","text":"","code":"CopyStrategy$execute(original_dir)"},{"path":"https://jakubsob.github.io/muttest/reference/CopyStrategy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CopyStrategy interface ‚Äî CopyStrategy","text":"original_dir original directory copy plan current test plan","code":""},{"path":"https://jakubsob.github.io/muttest/reference/CopyStrategy.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"CopyStrategy interface ‚Äî CopyStrategy","text":"path temporary directory","code":""},{"path":"https://jakubsob.github.io/muttest/reference/CopyStrategy.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"CopyStrategy interface ‚Äî CopyStrategy","text":"objects class cloneable method.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/CopyStrategy.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"CopyStrategy interface ‚Äî CopyStrategy","text":"","code":"CopyStrategy$clone(deep = FALSE)"},{"path":"https://jakubsob.github.io/muttest/reference/CopyStrategy.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"CopyStrategy interface ‚Äî CopyStrategy","text":"deep Whether make deep clone.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/FileTestStrategy.html","id":null,"dir":"Reference","previous_headings":"","what":"Run tests matching the mutated source file name ‚Äî FileTestStrategy","title":"Run tests matching the mutated source file name ‚Äî FileTestStrategy","text":"strategy tells mutant caught test matching source file name. example, source file name foo.R, test files named test-foo.R test-bar.R, test-foo.R run. strategy give faster results ?FullTestStrategy, especially big codebases, score might less accurate.","code":""},{"path":[]},{"path":"https://jakubsob.github.io/muttest/reference/FileTestStrategy.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Run tests matching the mutated source file name ‚Äî FileTestStrategy","text":"muttest::TestStrategy -> FileTestStrategy","code":""},{"path":[]},{"path":"https://jakubsob.github.io/muttest/reference/FileTestStrategy.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Run tests matching the mutated source file name ‚Äî FileTestStrategy","text":"FileTestStrategy$new() FileTestStrategy$execute() FileTestStrategy$clone()","code":""},{"path":"https://jakubsob.github.io/muttest/reference/FileTestStrategy.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Run tests matching the mutated source file name ‚Äî FileTestStrategy","text":"Initialize FileTestStrategy","code":""},{"path":"https://jakubsob.github.io/muttest/reference/FileTestStrategy.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run tests matching the mutated source file name ‚Äî FileTestStrategy","text":"","code":"FileTestStrategy$new(   load_helpers = TRUE,   load_package = c(\"source\", \"none\", \"installed\") )"},{"path":"https://jakubsob.github.io/muttest/reference/FileTestStrategy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run tests matching the mutated source file name ‚Äî FileTestStrategy","text":"load_helpers Whether load test helpers load_package package loading strategy","code":""},{"path":"https://jakubsob.github.io/muttest/reference/FileTestStrategy.html","id":"method-execute-","dir":"Reference","previous_headings":"","what":"Method execute()","title":"Run tests matching the mutated source file name ‚Äî FileTestStrategy","text":"Execute test strategy","code":""},{"path":"https://jakubsob.github.io/muttest/reference/FileTestStrategy.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Run tests matching the mutated source file name ‚Äî FileTestStrategy","text":"","code":"FileTestStrategy$execute(path, plan, reporter)"},{"path":"https://jakubsob.github.io/muttest/reference/FileTestStrategy.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run tests matching the mutated source file name ‚Äî FileTestStrategy","text":"path path test directory plan current mutation plan. See test_plan(). reporter reporter use test results","code":""},{"path":"https://jakubsob.github.io/muttest/reference/FileTestStrategy.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Run tests matching the mutated source file name ‚Äî FileTestStrategy","text":"test results","code":""},{"path":"https://jakubsob.github.io/muttest/reference/FileTestStrategy.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Run tests matching the mutated source file name ‚Äî FileTestStrategy","text":"objects class cloneable method.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/FileTestStrategy.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Run tests matching the mutated source file name ‚Äî FileTestStrategy","text":"","code":"FileTestStrategy$clone(deep = FALSE)"},{"path":"https://jakubsob.github.io/muttest/reference/FileTestStrategy.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run tests matching the mutated source file name ‚Äî FileTestStrategy","text":"deep Whether make deep clone.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/FullTestStrategy.html","id":null,"dir":"Reference","previous_headings":"","what":"Run all tests for a mutant ‚Äî FullTestStrategy","title":"Run all tests for a mutant ‚Äî FullTestStrategy","text":"test strategy tells mutant caught test. get faster results, especially big codebases, use ?FileTestStrategy instead.","code":""},{"path":[]},{"path":"https://jakubsob.github.io/muttest/reference/FullTestStrategy.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Run all tests for a mutant ‚Äî FullTestStrategy","text":"muttest::TestStrategy -> FullTestStrategy","code":""},{"path":[]},{"path":"https://jakubsob.github.io/muttest/reference/FullTestStrategy.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Run all tests for a mutant ‚Äî FullTestStrategy","text":"FullTestStrategy$new() FullTestStrategy$execute() FullTestStrategy$clone()","code":""},{"path":"https://jakubsob.github.io/muttest/reference/FullTestStrategy.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Run all tests for a mutant ‚Äî FullTestStrategy","text":"Initialize","code":""},{"path":"https://jakubsob.github.io/muttest/reference/FullTestStrategy.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run all tests for a mutant ‚Äî FullTestStrategy","text":"","code":"FullTestStrategy$new(   load_helpers = TRUE,   load_package = c(\"source\", \"none\", \"installed\") )"},{"path":"https://jakubsob.github.io/muttest/reference/FullTestStrategy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run all tests for a mutant ‚Äî FullTestStrategy","text":"load_helpers Whether load test helpers load_package package loading strategy","code":""},{"path":"https://jakubsob.github.io/muttest/reference/FullTestStrategy.html","id":"method-execute-","dir":"Reference","previous_headings":"","what":"Method execute()","title":"Run all tests for a mutant ‚Äî FullTestStrategy","text":"Execute test strategy","code":""},{"path":"https://jakubsob.github.io/muttest/reference/FullTestStrategy.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Run all tests for a mutant ‚Äî FullTestStrategy","text":"","code":"FullTestStrategy$execute(path, plan, reporter)"},{"path":"https://jakubsob.github.io/muttest/reference/FullTestStrategy.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run all tests for a mutant ‚Äî FullTestStrategy","text":"path path test directory plan current mutation plan. See test_plan(). reporter reporter use test results","code":""},{"path":"https://jakubsob.github.io/muttest/reference/FullTestStrategy.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Run all tests for a mutant ‚Äî FullTestStrategy","text":"test results","code":""},{"path":"https://jakubsob.github.io/muttest/reference/FullTestStrategy.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Run all tests for a mutant ‚Äî FullTestStrategy","text":"objects class cloneable method.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/FullTestStrategy.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Run all tests for a mutant ‚Äî FullTestStrategy","text":"","code":"FullTestStrategy$clone(deep = FALSE)"},{"path":"https://jakubsob.github.io/muttest/reference/FullTestStrategy.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run all tests for a mutant ‚Äî FullTestStrategy","text":"deep Whether make deep clone.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":null,"dir":"Reference","previous_headings":"","what":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"reporter displays progress indicator mutation tests. provides real-time feedback mutants tested whether killed tests.","code":""},{"path":[]},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"muttest::MutationReporter -> MutationProgressReporter","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"start_time Time testing started (duration calculation) min_time Minimum test duration display timing information col_config List column configuration report formatting","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"muttest::MutationReporter$cat_line() muttest::MutationReporter$cat_tight() muttest::MutationReporter$end_mutator() muttest::MutationReporter$get_score() muttest::MutationReporter$rule() muttest::MutationReporter$start_file() muttest::MutationReporter$start_mutator()","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"MutationProgressReporter$format_column() MutationProgressReporter$fmt_h() MutationProgressReporter$fmt_r() MutationProgressReporter$new() MutationProgressReporter$start_reporter() MutationProgressReporter$add_result() MutationProgressReporter$update() MutationProgressReporter$end_file() MutationProgressReporter$cr() MutationProgressReporter$end_reporter() MutationProgressReporter$clone()","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-format-column-","dir":"Reference","previous_headings":"","what":"Method format_column()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"Format column specified padding width","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$format_column(text, col_name, colorize = NULL)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"text Text format col_name Column name use configuration colorize Optional function color text","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-fmt-h-","dir":"Reference","previous_headings":"","what":"Method fmt_h()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"Format header report","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$fmt_h()"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-fmt-r-","dir":"Reference","previous_headings":"","what":"Method fmt_r()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"Format row report","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$fmt_r(status, k, s, e, t, score, mutator, file)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"status Status symbol (e.g., tick cross) k Number killed mutations s Number survived mutations e Number errors t Total number mutations score Score percentage mutator mutator used file file tested","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"Formatted row string","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"Initialize new progress reporter","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$new(   test_reporter = \"silent\",   min_time = 1,   file = stdout() )"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"test_reporter Reporter use testthat::test_dir min_time Minimum time show elapsed time (default: 1s) file Output destination (default: stdout)","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-start-reporter-","dir":"Reference","previous_headings":"","what":"Method start_reporter()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"Start reporter","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$start_reporter(plan = NULL)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"plan complete mutation plan","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-add-result-","dir":"Reference","previous_headings":"","what":"Method add_result()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"Add mutation test result","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$add_result(plan, killed, survived, errors)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"plan Current testing plan. See test_plan(). killed Whether mutation killed tests survived Number survived mutations errors Number errors encountered","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"Update status spinner (long-running operations)","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$update(force = FALSE)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"force Force update even interval elapsed","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-end-file-","dir":"Reference","previous_headings":"","what":"Method end_file()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"End testing current file","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$end_file()"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-cr-","dir":"Reference","previous_headings":"","what":"Method cr()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"Carriage return dynamic, newline otherwise","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$cr()"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-end-reporter-","dir":"Reference","previous_headings":"","what":"Method end_reporter()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"End reporter detailed summary","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$end_reporter()"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"objects class cloneable method.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$clone(deep = FALSE)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"deep Whether make deep clone.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporter for Mutation Testing ‚Äî MutationReporter","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"job mutation reporter aggregate display results mutation tests. tracks mutation attempt, reporting whether tests killed mutation mutation survived.","code":""},{"path":[]},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"test_reporter Reporter use testthat::test_dir function Output destination reporter messages width Width console characters unicode Whether Unicode output supported crayon Whether colored output supported rstudio Whether running RStudio hyperlinks Whether terminal hyperlinks supported current_file Path file currently mutated current_mutator Mutator currently applied plan Complete mutation plan test run results List mutation test results, indexed file path current_score Current score mutation tests","code":""},{"path":[]},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"MutationReporter$new() MutationReporter$start_reporter() MutationReporter$start_file() MutationReporter$start_mutator() MutationReporter$add_result() MutationReporter$end_mutator() MutationReporter$end_file() MutationReporter$end_reporter() MutationReporter$get_score() MutationReporter$cat_tight() MutationReporter$cat_line() MutationReporter$rule() MutationReporter$clone()","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Initialize new reporter","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$new(test_reporter = \"silent\", file = stdout())"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"test_reporter Reporter use testthat::test_dir function file Output destination (default: stdout)","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-start-reporter-","dir":"Reference","previous_headings":"","what":"Method start_reporter()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Start reporter","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$start_reporter(plan = NULL)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"plan complete mutation plan temp_dir Path temporary directory testing","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-start-file-","dir":"Reference","previous_headings":"","what":"Method start_file()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Start testing file","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$start_file(filename)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"filename Path file mutated","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-start-mutator-","dir":"Reference","previous_headings":"","what":"Method start_mutator()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Start testing specific mutator","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$start_mutator(mutator)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"mutator mutator applied","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-add-result-","dir":"Reference","previous_headings":"","what":"Method add_result()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Add mutation test result","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$add_result(plan, killed, survived, errors)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"plan Current testing plan. See test_plan(). killed Whether mutation killed tests survived Number survived mutations errors Number errors encountered","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-end-mutator-","dir":"Reference","previous_headings":"","what":"Method end_mutator()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"End testing current mutator","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$end_mutator()"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-end-file-","dir":"Reference","previous_headings":"","what":"Method end_file()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"End testing current file","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$end_file()"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-end-reporter-","dir":"Reference","previous_headings":"","what":"Method end_reporter()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"End reporter show summary","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$end_reporter()"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-get-score-","dir":"Reference","previous_headings":"","what":"Method get_score()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Get current score","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$get_score()"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-cat-tight-","dir":"Reference","previous_headings":"","what":"Method cat_tight()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Print message output","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$cat_tight(...)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"... Message print","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-cat-line-","dir":"Reference","previous_headings":"","what":"Method cat_line()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Print message output","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$cat_line(...)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"... Message print","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-rule-","dir":"Reference","previous_headings":"","what":"Method rule()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Print message output rule","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$rule(...)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"... Message print","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"objects class cloneable method.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$clone(deep = FALSE)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"deep Whether make deep clone.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/PackageCopyStrategy.html","id":null,"dir":"Reference","previous_headings":"","what":"Package copy strategy ‚Äî PackageCopyStrategy","title":"Package copy strategy ‚Äî PackageCopyStrategy","text":"copies files directories original directory temporary directory.","code":""},{"path":[]},{"path":"https://jakubsob.github.io/muttest/reference/PackageCopyStrategy.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Package copy strategy ‚Äî PackageCopyStrategy","text":"muttest::CopyStrategy -> PackageCopyStrategy","code":""},{"path":[]},{"path":"https://jakubsob.github.io/muttest/reference/PackageCopyStrategy.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Package copy strategy ‚Äî PackageCopyStrategy","text":"PackageCopyStrategy$execute() PackageCopyStrategy$clone()","code":""},{"path":"https://jakubsob.github.io/muttest/reference/PackageCopyStrategy.html","id":"method-execute-","dir":"Reference","previous_headings":"","what":"Method execute()","title":"Package copy strategy ‚Äî PackageCopyStrategy","text":"Copy project files, excluding hidden temp directories","code":""},{"path":"https://jakubsob.github.io/muttest/reference/PackageCopyStrategy.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package copy strategy ‚Äî PackageCopyStrategy","text":"","code":"PackageCopyStrategy$execute(original_dir, plan)"},{"path":"https://jakubsob.github.io/muttest/reference/PackageCopyStrategy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Package copy strategy ‚Äî PackageCopyStrategy","text":"original_dir original directory copy plan current test plan","code":""},{"path":"https://jakubsob.github.io/muttest/reference/PackageCopyStrategy.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Package copy strategy ‚Äî PackageCopyStrategy","text":"path temporary directory","code":""},{"path":"https://jakubsob.github.io/muttest/reference/PackageCopyStrategy.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Package copy strategy ‚Äî PackageCopyStrategy","text":"objects class cloneable method.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/PackageCopyStrategy.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Package copy strategy ‚Äî PackageCopyStrategy","text":"","code":"PackageCopyStrategy$clone(deep = FALSE)"},{"path":"https://jakubsob.github.io/muttest/reference/PackageCopyStrategy.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Package copy strategy ‚Äî PackageCopyStrategy","text":"deep Whether make deep clone.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/TestStrategy.html","id":null,"dir":"Reference","previous_headings":"","what":"TestStrategy interface ‚Äî TestStrategy","title":"TestStrategy interface ‚Äî TestStrategy","text":"Extend class implement custom test strategy.","code":""},{"path":[]},{"path":[]},{"path":"https://jakubsob.github.io/muttest/reference/TestStrategy.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TestStrategy interface ‚Äî TestStrategy","text":"TestStrategy$execute() TestStrategy$clone()","code":""},{"path":"https://jakubsob.github.io/muttest/reference/TestStrategy.html","id":"method-execute-","dir":"Reference","previous_headings":"","what":"Method execute()","title":"TestStrategy interface ‚Äî TestStrategy","text":"Execute test strategy","code":""},{"path":"https://jakubsob.github.io/muttest/reference/TestStrategy.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TestStrategy interface ‚Äî TestStrategy","text":"","code":"TestStrategy$execute(path, plan, reporter)"},{"path":"https://jakubsob.github.io/muttest/reference/TestStrategy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TestStrategy interface ‚Äî TestStrategy","text":"path path test directory plan current mutation plan. See test_plan(). reporter reporter use test results","code":""},{"path":"https://jakubsob.github.io/muttest/reference/TestStrategy.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TestStrategy interface ‚Äî TestStrategy","text":"test result","code":""},{"path":"https://jakubsob.github.io/muttest/reference/TestStrategy.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TestStrategy interface ‚Äî TestStrategy","text":"objects class cloneable method.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/TestStrategy.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TestStrategy interface ‚Äî TestStrategy","text":"","code":"TestStrategy$clone(deep = FALSE)"},{"path":"https://jakubsob.github.io/muttest/reference/TestStrategy.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TestStrategy interface ‚Äî TestStrategy","text":"deep Whether make deep clone.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/default_copy_strategy.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a default project copy strategy ‚Äî default_copy_strategy","title":"Create a default project copy strategy ‚Äî default_copy_strategy","text":"Create default project copy strategy","code":""},{"path":"https://jakubsob.github.io/muttest/reference/default_copy_strategy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a default project copy strategy ‚Äî default_copy_strategy","text":"","code":"default_copy_strategy(...)"},{"path":"https://jakubsob.github.io/muttest/reference/default_copy_strategy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a default project copy strategy ‚Äî default_copy_strategy","text":"... Arguments passed ?PackageCopyStrategy constructor.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/default_copy_strategy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a default project copy strategy ‚Äî default_copy_strategy","text":"?CopyStrategy object","code":""},{"path":[]},{"path":"https://jakubsob.github.io/muttest/reference/default_reporter.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a default reporter ‚Äî default_reporter","title":"Create a default reporter ‚Äî default_reporter","text":"Create default reporter","code":""},{"path":"https://jakubsob.github.io/muttest/reference/default_reporter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a default reporter ‚Äî default_reporter","text":"","code":"default_reporter(...)"},{"path":"https://jakubsob.github.io/muttest/reference/default_reporter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a default reporter ‚Äî default_reporter","text":"... Arguments passed ?MutationProgressReporter constructor.","code":""},{"path":[]},{"path":"https://jakubsob.github.io/muttest/reference/default_test_strategy.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a default run strategy ‚Äî default_test_strategy","title":"Create a default run strategy ‚Äî default_test_strategy","text":"Create default run strategy","code":""},{"path":"https://jakubsob.github.io/muttest/reference/default_test_strategy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a default run strategy ‚Äî default_test_strategy","text":"","code":"default_test_strategy(...)"},{"path":"https://jakubsob.github.io/muttest/reference/default_test_strategy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a default run strategy ‚Äî default_test_strategy","text":"... Arguments passed ?FullTestStrategy constructor.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/default_test_strategy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a default run strategy ‚Äî default_test_strategy","text":"?TestStrategy object","code":""},{"path":[]},{"path":"https://jakubsob.github.io/muttest/reference/operator.html","id":null,"dir":"Reference","previous_headings":"","what":"Operator mutator ‚Äî operator","title":"Operator mutator ‚Äî operator","text":"changes binary operator another one.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/operator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Operator mutator ‚Äî operator","text":"","code":"operator(from, to)"},{"path":"https://jakubsob.github.io/muttest/reference/operator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Operator mutator ‚Äî operator","text":"operator replaced. operator replace .","code":""},{"path":"https://jakubsob.github.io/muttest/reference/operator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Operator mutator ‚Äî operator","text":"","code":"operator(\"==\", \"!=\") #> Mutator: == -> != #> Query: (binary_operator #>       lhs: (_) @lhs #>       operator: _ @operator #>       rhs: (_) @rhs #>       (#eq? @operator \"==\") #>     ) operator(\">\", \"<\") #> Mutator: > -> < #> Query: (binary_operator #>       lhs: (_) @lhs #>       operator: _ @operator #>       rhs: (_) @rhs #>       (#eq? @operator \">\") #>     ) operator(\"<\", \">\") #> Mutator: < -> > #> Query: (binary_operator #>       lhs: (_) @lhs #>       operator: _ @operator #>       rhs: (_) @rhs #>       (#eq? @operator \"<\") #>     ) operator(\"+\", \"-\") #> Mutator: + -> - #> Query: (binary_operator #>       lhs: (_) @lhs #>       operator: _ @operator #>       rhs: (_) @rhs #>       (#eq? @operator \"+\") #>     )"},{"path":"https://jakubsob.github.io/muttest/reference/test.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a mutation test ‚Äî test","title":"Run a mutation test ‚Äî test","text":"Run mutation test","code":""},{"path":"https://jakubsob.github.io/muttest/reference/test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a mutation test ‚Äî test","text":"","code":"test(   plan,   path = \"tests/testthat\",   reporter = default_reporter(),   test_strategy = default_test_strategy(),   copy_strategy = default_copy_strategy() )"},{"path":"https://jakubsob.github.io/muttest/reference/test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a mutation test ‚Äî test","text":"plan data frame test plan. See test_plan(). path Path test directory. reporter Reporter use mutation testing results. See ?MutationReporter. test_strategy Strategy running tests. See ?TestStrategy. purpose test strategy control tests executed. can run tests mutant, tests relevant mutant. copy_strategy Strategy copying project. See ?CopyStrategy. muttest creates mutants project temporary directory. strategy controls files copied temporary directory.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a mutation test ‚Äî test","text":"numeric value representing mutation score.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/test_plan.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a test plan for mutation testing ‚Äî test_plan","title":"Create a test plan for mutation testing ‚Äî test_plan","text":"purpose function create preview plan mutation testing.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/test_plan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a test plan for mutation testing ‚Äî test_plan","text":"","code":"test_plan(mutators, source_files = fs::dir_ls(\"R\", regexp = \".[rR]$\"))"},{"path":"https://jakubsob.github.io/muttest/reference/test_plan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a test plan for mutation testing ‚Äî test_plan","text":"mutators list mutators use. See operator(). source_files vector file paths source files.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/test_plan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a test plan for mutation testing ‚Äî test_plan","text":"data frame test plan. data frame following columns: filename: name source file. original_code: original code source file. mutated_code: mutated code source file. mutator: mutator applied. filter: filter can used select tests run. Currenly used ?TestStrategy.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/test_plan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a test plan for mutation testing ‚Äî test_plan","text":"mutant requires rerunning tests. large project might feasible test mutants one go. function allows create plan selected source files mutators. plan data frame format, row represents mutant. can subset plan passing test() function.","code":""}]
