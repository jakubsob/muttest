[{"path":"https://jakubsob.github.io/muttest/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 muttest authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jakubsob.github.io/muttest/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jakub Sobolewski. Author, maintainer.","code":""},{"path":"https://jakubsob.github.io/muttest/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sobolewski J (2025). muttest: Mutation Testing. R package version 0.1.0, https://jakubsob.github.io/muttest/.","code":"@Manual{,   title = {muttest: Mutation Testing},   author = {Jakub Sobolewski},   year = {2025},   note = {R package version 0.1.0},   url = {https://jakubsob.github.io/muttest/}, }"},{"path":"https://jakubsob.github.io/muttest/index.html","id":"muttest-","dir":"","previous_headings":"","what":"Mutation Testing","title":"Mutation Testing","text":"Mutation testing frameworks work intentionally introducing small changes (called mutations) code check whether tests can detect . goal evaluate effective test suite ‚Äî tests fail code altered, ‚Äôs good sign. don‚Äôt, tests might missing something important.","code":""},{"path":"https://jakubsob.github.io/muttest/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Mutation Testing","text":"Given codebase : tests : running muttest::test() ‚Äôll get report mutation score: mutation score : Mutation Score=Killed MutantsTotal Mutants√ó100%\\text{Mutation Score} = \\frac{\\text{Killed Mutants}}{\\text{Total Mutants}} \\times 100\\%, Mutant defined variant original code used test robustness test suite. example 2 mutants code: Tests run variants code. first test run first mutant pass, result still 0. second test run second mutant fail, result Inf. second test pass mutants, result still numeric. killed 1 mutant 2, mutation score 50%.","code":"#' R/calculate.R calculate <- function(x, y) {   (x + y) * 0 } #' tests/testthat/test_calculate.R test_that(\"calculate always returns 0\", {   expect_equal(calculate(2, 2), 0) })  test_that(\"calculate returns a numeric\", {   expect_true(is.numeric(calculate(2, 2))) }) muttest::test(   path = \"tests/testthat\",   source_path = \"R\",   mutators = list(operator(\"+\", \"-\"), operator(\"*\", \"/\")) ) #> ‚îÄ‚îÄ Mutation Testing ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Using temporary directory: /var/folders/vk/yrfnlfbs4dq06zwj3rqg5h0m0000gn/T//RtmpIpw4bv/file108173bf72d17 #> Starting mutation testing with: #>   - 2 total mutations #>   - 1 files to mutate #>   - 2 unique mutation operators #> #>    |  K    S    T   | File #> x  |  0    1    1   | calculate.R     1 \"+\" -> \"-\" #> ‚úî  |  1    1    2   | calculate.R     2 \"*\" -> \"/\" #> #> ‚îÄ‚îÄ Mutation Distribution ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> calculate.R: 1 killed / 1 survived / 2 total (50.0%) #> #> #> ‚îÄ‚îÄ Mutation Testing Results ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> [ KILLED 1 | SURVIVED 1 | TOTAL 2 | SCORE: 50.0% ] #' R/calculate.R calculate <- function(x, y) {   (x - y) * 0 # mutant 1: \"+\" -> \"-\" } #' R/calculate.R calculate <- function(x, y) {   (x + y) / 0 # mutant 2: \"*\" -> \"/\" } #' tests/testthat/test_calculate.R test_that(\"calculate always returns 0\", {   # üü¢ This test doesn't kill \"+\" -> \"-\" operator mutant: (2 - 2) * 0 = 0   # ‚ùå This test kills \"*\" -> \"/\" operator mutant: (2 + 2) / 0 = Inf   expect_equal(calculate(2, 2), 0) })  test_that(\"calculate returns a numeric\", {   # üü¢ This test doesn't kill \"+\" -> \"-\", (2 - 2) * 0 = 0, is numeric   # üü¢ This test doesn't kill \"*\" -> \"/\", (2 + 2) / 0 = Inf, is numeric   expect_true(is.numeric(calculate(2, 2))) })"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":null,"dir":"Reference","previous_headings":"","what":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"Progress Reporter Mutation Testing Progress Reporter Mutation Testing","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"reporter displays progress indicator mutation tests. provides real-time feedback mutations tested whether killed tests.","code":""},{"path":[]},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"muttest::MutationReporter -> MutationProgressReporter","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"frames Spinner animation frames dynamic display dynamic Whether dynamic output supported current terminal start_time Time testing started (duration calculation) min_time Minimum test duration display timing information last_update Time last progress update update_interval often update spinner (seconds) frame_index Current frame index spinner animation mutations_by_file List tracking mutation statistics file table_header_printed Whether table header printed current_mutation_index List tracking current mutation index file col_status_width Width status column col_killed_width Width killed mutations column col_survived_width Width survived mutations column col_total_width Width total mutations column col_file_width Width file name column col_sep Column separator string","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"muttest::MutationReporter$cat_line() muttest::MutationReporter$cat_tight() muttest::MutationReporter$end_mutator() muttest::MutationReporter$rule()","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"MutationProgressReporter$new() MutationProgressReporter$start_reporter() MutationProgressReporter$start_file() MutationProgressReporter$start_mutator() MutationProgressReporter$add_result() MutationProgressReporter$update() MutationProgressReporter$end_file() MutationProgressReporter$cr() MutationProgressReporter$end_reporter() MutationProgressReporter$clone()","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"Initialize new progress reporter","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$new(   test_reporter = \"silent\",   min_time = 1,   update_interval = 0.1,   file = stdout() )"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"test_reporter Reporter use testthat::test_dir min_time Minimum time show elapsed time (default: 1s) update_interval often update display (default: 0.1s) file Output destination (default: stdout)","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-start-reporter-","dir":"Reference","previous_headings":"","what":"Method start_reporter()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"Start reporter","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$start_reporter(plan = NULL, temp_dir = NULL)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"plan complete mutation plan temp_dir Path temporary directory testing","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-start-file-","dir":"Reference","previous_headings":"","what":"Method start_file()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"Start testing file","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$start_file(file_path)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"file_path Path file mutated","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-start-mutator-","dir":"Reference","previous_headings":"","what":"Method start_mutator()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"Start testing specific mutator","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$start_mutator(mutator)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"mutator mutator applied","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-add-result-","dir":"Reference","previous_headings":"","what":"Method add_result()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"Add mutation test result","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$add_result(file_path, mutator, test_results, killed)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"file_path Path file mutated mutator mutator applied test_results Results test execution killed Whether mutation killed tests","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"Update status spinner (long-running operations)","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$update(force = FALSE)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"force Force update even interval elapsed","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-end-file-","dir":"Reference","previous_headings":"","what":"Method end_file()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"End testing current file","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$end_file()"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-cr-","dir":"Reference","previous_headings":"","what":"Method cr()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"Carriage return dynamic, newline otherwise","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$cr()"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-end-reporter-","dir":"Reference","previous_headings":"","what":"Method end_reporter()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"End reporter detailed summary","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$end_reporter()"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"objects class cloneable method.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"","code":"MutationProgressReporter$clone(deep = FALSE)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationProgressReporter.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress Reporter for Mutation Testing ‚Äî MutationProgressReporter","text":"deep Whether make deep clone.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporter for Mutation Testing ‚Äî MutationReporter","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Reporter Mutation Testing Reporter Mutation Testing","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"job mutation reporter aggregate display results mutation tests. tracks mutation attempt, reporting whether tests killed mutation mutation survived.","code":""},{"path":[]},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"test_reporter Reporter use testthat::test_dir function Output destination reporter messages width Width console characters unicode Whether Unicode output supported crayon Whether colored output supported rstudio Whether running RStudio hyperlinks Whether terminal hyperlinks supported total_mutations Total number mutation tests executed killed_mutations Number mutations killed tests survived_mutations Number mutations survived tests current_file Path file currently mutated current_mutator Mutator currently applied plan Complete mutation plan test run temp_dir Path temporary directory testing","code":""},{"path":[]},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"MutationReporter$new() MutationReporter$start_reporter() MutationReporter$start_file() MutationReporter$start_mutator() MutationReporter$add_result() MutationReporter$end_mutator() MutationReporter$end_file() MutationReporter$end_reporter() MutationReporter$cat_tight() MutationReporter$cat_line() MutationReporter$rule() MutationReporter$clone()","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Initialize new reporter","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$new(test_reporter = \"silent\", file = stdout())"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"test_reporter Reporter use testthat::test_dir function file Output destination (default: stdout)","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-start-reporter-","dir":"Reference","previous_headings":"","what":"Method start_reporter()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Start reporter","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$start_reporter(plan = NULL, temp_dir = NULL)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"plan complete mutation plan temp_dir Path temporary directory testing","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-start-file-","dir":"Reference","previous_headings":"","what":"Method start_file()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Start testing file","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$start_file(file_path)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"file_path Path file mutated","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-start-mutator-","dir":"Reference","previous_headings":"","what":"Method start_mutator()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Start testing specific mutator","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$start_mutator(mutator)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"mutator mutator applied","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-add-result-","dir":"Reference","previous_headings":"","what":"Method add_result()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Add mutation test result","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$add_result(file_path, mutator, test_results, killed)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"file_path Path file mutated mutator mutator applied test_results Results test execution killed Whether mutation killed tests","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-end-mutator-","dir":"Reference","previous_headings":"","what":"Method end_mutator()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"End testing current mutator","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$end_mutator()"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-end-file-","dir":"Reference","previous_headings":"","what":"Method end_file()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"End testing current file","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$end_file()"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-end-reporter-","dir":"Reference","previous_headings":"","what":"Method end_reporter()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"End reporter show summary","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$end_reporter()"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-cat-tight-","dir":"Reference","previous_headings":"","what":"Method cat_tight()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Print message output","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$cat_tight(...)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"... Message print","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-cat-line-","dir":"Reference","previous_headings":"","what":"Method cat_line()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Print message output","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$cat_line(...)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"... Message print","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-rule-","dir":"Reference","previous_headings":"","what":"Method rule()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"Print message output rule","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$rule(...)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"... Message print","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"objects class cloneable method.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"","code":"MutationReporter$clone(deep = FALSE)"},{"path":"https://jakubsob.github.io/muttest/reference/MutationReporter.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter for Mutation Testing ‚Äî MutationReporter","text":"deep Whether make deep clone.","code":""},{"path":"https://jakubsob.github.io/muttest/reference/default_reporter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a default reporter ‚Äî default_reporter","title":"Get a default reporter ‚Äî default_reporter","text":"Get default reporter","code":""},{"path":"https://jakubsob.github.io/muttest/reference/default_reporter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a default reporter ‚Äî default_reporter","text":"","code":"default_reporter(...)"},{"path":"https://jakubsob.github.io/muttest/reference/default_reporter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a default reporter ‚Äî default_reporter","text":"... Additional arguments passed reporter constructor","code":""},{"path":"https://jakubsob.github.io/muttest/reference/operator.html","id":null,"dir":"Reference","previous_headings":"","what":"Operator mutator ‚Äî operator","title":"Operator mutator ‚Äî operator","text":"Operator mutator","code":""},{"path":"https://jakubsob.github.io/muttest/reference/operator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Operator mutator ‚Äî operator","text":"","code":"operator(from, to)"},{"path":"https://jakubsob.github.io/muttest/reference/operator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Operator mutator ‚Äî operator","text":"operator replaced. operator replace .","code":""},{"path":"https://jakubsob.github.io/muttest/reference/test.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a mutation test ‚Äî test","title":"Run a mutation test ‚Äî test","text":"Run mutation test","code":""},{"path":"https://jakubsob.github.io/muttest/reference/test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a mutation test ‚Äî test","text":"","code":"test(   path,   source_path = \"R\",   mutators = list(operator(\"+\", \"-\"), operator(\"*\", \"/\")),   env = new.env(),   reporter = default_reporter() )"},{"path":"https://jakubsob.github.io/muttest/reference/test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a mutation test ‚Äî test","text":"path Path test directory. source_path Path source code directory. mutators list mutators use. env environment use testing. reporter Reporter use mutation testing results.","code":""}]
